<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Responsive Dashboard</title>
  <!-- Add Bootstrap CSS link -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="/css/adminsidenavbar.css">
  <!-- Include SweetAlert CSS and JavaScript -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.6/dist/sweetalert2.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.6/dist/sweetalert2.all.min.js"></script>


  <style>
    /* Your existing styles here */

    /* Optional: Customize styles if needed */
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
    }


    .swal-title {
      color: #3498db;
      /* Title color */
    }

    .swal-text {
      color: #2ecc71;
      /* Text color */
    }

    .swal-button--confirm {
      background-color: #3498db;
      /* Confirm button background color */
      color: #fff;
      /* Confirm button text color */
    }

    .swal-button--cancel {
      background-color: #e74c3c;
      /* Cancel button background color */
      color: #fff;
      /* Cancel button text color */
    }

    .chart-container {
      width: 25rem;
      /* Adjust the width as needed */
      height: 20rem;
      /* Adjust the height as needed */
    }
  </style>
</head>

<body>

  <div class="dashboard">
    <%- include('sidenavbar') %>


      <div class="content">
        <!-- Your existing content here -->
        <h2>Dashboard</h2>
        <div class="row">
          <!-- Area Chart -->
          <div class="container-lg">
            <div class="row">
                <div class="col-lg-9 md-12">
                    <div class="card shadow mb-4">
                        <!-- Card Header - Dropdown -->
                        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                            <h6 class="m-0 font-weight-bold text-primary">
                                Orders Overview
                            </h6>
                        </div>
                        <!-- Card Body -->
                        <div class="card-body">
                            <label for="chartSelector">Select Chart Type:</label>
                            <select class="form-control" id="chartSelector" onchange="updateChart()">
                                <option value="mychart1">Weekly Orders</option>
                                <option value="mychart2">Monthly Orders</option>
                                <option value="mychart3">Yearly Orders</option>
                            </select>
                            <div class="chart-area">
                                <!-- Chart code start here -->
                                <div class="content" style="display: flex; justify-content: space-between;">
                                    <div class="chart-container">
                                        <canvas id="mychart1" width="900" height="700" data-dates="<%= JSON.stringify(dates) %>" data-dailyOrder="<%=JSON.stringify(orderCounts)%>"></canvas>
                                        <canvas id="mychart2" width="800" height="800" data-monthly="<%= JSON.stringify(monthdata) %>"></canvas>
                                        <canvas id="mychart3" width="800" height="800" data-yearlyOrders="<%=JSON.stringify(totalOrderCount3)%>"></canvas>
                                    </div>
                                </div>
                                <!-- Chart code End here -->
                                <!-- 
                                <canvas id="myAreaChart"></canvas> -->
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-12">
        
                  
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Sales Report</h4>
                            <label for="startingDate" class="form-label">Start Date</label>
                            <input type="date" name="startingdate" id="startingDate" class="form-control mb-3">
                            <label for="endingDate" class="form-label">End Date</label>
                            <input type="date" name="endingdate" id="endingDate" class="form-control mb-3">
                            <button class="btn btn-primary btn-block" onclick="generateReport('pdf')">Generate PDF Report</button>
                            <button class="btn btn-primary btn-block" onclick="generateReport('excel')">Generate Excel Report</button>
                        </div>
                   
                </div>
                  
                </div>
                
               
            </div>
        </div>
        
          <!-- Pie Chart -->
        </div>
      

        <div class="container mt-5">
          <div class="row">
            <div class="col-lg-6 col-md-12">
              <div id="topSellingProducts" class="card"
                style="border: 10px solid #ccc; border-radius: 5px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); transition: transform 0.3s ease;">
                <div class="card-header" style="background-color: #ff00e1; color: #fff; padding: 10px;">
                  Top Selling Products
                </div>
                <table class="table table-striped">
                  <thead>
                    <tr style="color: blue;">
                      <th scope="col">Product Name</th>
                      <th scope="col" style="text-align: center;">Quantity</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% for (let i=0; i < productNames.length; i++) { %>
                      <tr>
                        <td>
                          <%= productNames[i] %>
                        </td>
                        <td style="color: #e74c3c;text-align: center;">
                          <%= sellingQuantities[i] %>
                        </td>
                      </tr>
                    <% } %>
                  </tbody>
                </table>
              </div>
            </div>
        
            <div class="col-lg-6 col-md-12">
              <div id="topSellingCategory" class="card"
                style="border: 10px solid #ccc; border-radius: 5px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); transition: transform 0.3s ease;">
                <div class="card-header" style="background-color: #ff00e1; color: #fff; padding: 10px;">
                  Top Selling Category
                </div>
                <table class="table">
                  <thead>
                    <tr style="color: blue;">
                      <th scope="col">Category</th>
                      <th scope="col" style="text-align: center;">Selling Quantity</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% for (let i=0; i < categoryNames.length; i++) { %>
                      <tr style="transition: background-color 0.3s ease;">
                        <td>
                          <%= categoryNames[i] %>
                        </td>
                        <td style="color: #e74c3c;text-align: center;">
                          <%= sellingQuantitiesByCategory[i] %>
                        </td>
                      </tr>
                    <% } %>
                  </tbody>
                </table>
              </div>
            </div>
            
          </div>
          
       

        <!-- 
<div style="height:50rem;width:100%;"> <canvas id="topSellingProductsChart" width="400" height="400"></canvas></div> -->


<canvas id="topSellingCategoriesChart" width="400" height="200"></canvas>


      </div>
<span id="chartvalue" data-chart="<%= categoryNamesJSON %>"></span>


  


      <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

      <script>
        function generateReport(reportType) {
         const startingDate = document.getElementById('startingDate').value;
         const endingDate = document.getElementById('endingDate').value;
    
         if (reportType === 'pdf') {
           // Redirect to the PDF generation route with query parameters
           window.location.href = `/admin/salesgeneratepdf?startingdate=${startingDate}&endingdate=${endingDate}`;
         } else if (reportType === 'excel') {
           // Redirect to the Excel generation route with query parameters
           window.location.href = `/admin/excelReport?startingdate=${startingDate}&endingdate=${endingDate}`;
         }
       }
    
    </script>

      <!--  -->
      <script>
        function showConfirmation() {
          Swal.fire({
            title: 'Logout Confirmation',
            text: 'Are you sure you want to log out?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, Logout',
            cancelButtonText: 'Cancel',
            customClass: {
              title: 'swal-title',
              text: 'swal-text',
              confirmButton: 'swal-button--confirm',
              cancelButton: 'swal-button--cancel'
            }
          }).then((result) => {
            if (result.isConfirmed) {
              performLogout();
            }
          });
        }

        function performLogout() {
          // Add your logout logic here
          // For example, redirect to the logout URL
          window.location.href = "/admin/logout";
        }
      </script>
      <!-- chat cdn -->
      <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
      <!-- script chart -->
      <script>
        document.addEventListener("DOMContentLoaded", function () {

          const chart1Container = document.querySelector('#mychart1');
          const rawDates = chart1Container.getAttribute('data-dates');
          const dates = JSON.parse(rawDates);
          const rawDailyOrders = chart1Container.getAttribute('data-dailyOrder');
          const dailyOrders = JSON.parse(rawDailyOrders);

          const orderEndDate = moment(dates[dates.length - 1]); // Use the last order date as the end date
          const lastSevenDays = [];
          let orders = [];

          // Generate labels for the last 7 days from the current date
          for (let i = 6; i >= 0; i--) {
            const date = orderEndDate.clone().subtract(i, 'days').format('YYYY-MM-DD');
            let index = dates.indexOf(date);
            if (index !== -1) {
              orders.push(dailyOrders[index]);
            } else {
              orders.push(0);
            }
            lastSevenDays.push(date);
          }

          const ctx1 = document.getElementById('mychart1').getContext('2d');
          const masspopchart1 = new Chart(ctx1, {
            type: 'bar',
            data: {
              labels: lastSevenDays,
              datasets: [{
                label: 'Weekly Orders',
                data: orders,
                backgroundColor: ['rgb(54, 162, 235)', 'rgb(255, 99, 132)'],
                barThickness: 20
              }]
            },
            options: {
              animation: {
                duration: 2000,
                easing: 'easeInOutQuart',
                onProgress: function (animation) {
                  console.log("progress", animation.progress);
                },
                onComplete: function (animation) {
                  console.log('Animation complete');
                }
              }
            }
          });


          // Chart 2



          const chart2Container = document.querySelector('#mychart2');
          document.getElementById("mychart2").style.display = "none";
          const rawMonthlyOrders = chart2Container.getAttribute('data-monthly');
          const monthlyData = JSON.parse(rawMonthlyOrders);

          const currentDate = new Date();
          const currentYear1 = currentDate.getFullYear();
          const currentMonth = currentDate.getMonth() + 1;

          const monthlyLabels = Array.from({ length: 12 }, (_, index) => {
            const year = currentMonth + index > 12 ? currentYear1 + 1 : currentYear1;
            const month = (currentMonth + index) % 12 || 12;
            return `${year}-${month.toString().padStart(2, '0')}`;
          });

          const ctx2 = document.getElementById('mychart2').getContext('2d');

          let masspopchart2 = new Chart(ctx2, {
            type: 'polarArea',
            data: {
              labels: monthlyLabels,
              datasets: [{
                label: 'Monthly Orders',
                data: monthlyData,
                backgroundColor: ['rgb(255, 205, 86)', 'rgb(54, 162, 235)',],
                barThickness: 20
              }]
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              animation: {
                duration: 2000,
                easing: 'easeInOutQuart',
                onProgress: function (animation) {
                  console.log(animation.progress);
                },
                onComplete: function (animation) {
                  console.log('Animation complete');
                }
              },
              scales: {
                x: {
                  type: 'category',
                  labels: monthlyLabels,
                  ticks: {
                    autoSkip: false,
                    maxRotation: 45,
                  }
                },
                y: {
                  beginAtZero: true,
                }
              }
            }
          });

          // Chart 3
          const chart3Container = document.querySelector('#mychart3');
          document.getElementById("mychart3").style.display = "none";
          const rawYearlyOrders = chart3Container.getAttribute('data-yearlyOrders');
          const yearlyOrders = rawYearlyOrders.split(',').map(Number);

          const currentYear = new Date().getFullYear();

          const yearlyLabels = Array.from({ length: 5 }, (_, index) => currentYear + index);

          const ctx3 = document.getElementById('mychart3').getContext('2d');

          let masspopchart3 = new Chart(ctx3, {
            type: 'pie',
            data: {
              labels: yearlyLabels,
              datasets: [{
                label: 'Yearly Orders',

                data: yearlyOrders,
                backgroundColor: ['rgba(144, 238, 144, 20)', 'rgba(54, 162, 235, 0.2)'],
                barThickness: 20
              }]
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              animation: {
                duration: 2000,
                easing: 'easeInOutQuart',
                onProgress: function (animation) {
                  console.log(animation.progress);
                },
                onComplete: function (animation) {
                  console.log('Animation complete');
                }
              },
              scales: {
                x: {
                  type: 'category',
                  labels: yearlyLabels.map(String),
                  ticks: {
                    autoSkip: false,
                    maxRotation: 45,
                  }
                },
                y: {
                  beginAtZero: true,
                }
              }
            }
          });
        });

        function updateChart() {
          var selectedChart = document.getElementById("chartSelector").value;

          // Hide all charts
          document.getElementById("mychart1").style.display = "none";
          document.getElementById("mychart2").style.display = "none";
          document.getElementById("mychart3").style.display = "none";

          // Show the selected chart
          document.getElementById(selectedChart).style.display = "block";
        }

      </script>




          
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const value = document.getElementById('chartvalue');
const brandsString = value.getAttribute('data-chart');
const brands = JSON.parse(brandsString);
const labels = ["", brands[0], "", brands[1], "", brands[2], "", brands[3]];

const result = labels.map((label, index) => {
  if (index % 2 === 0) {
    return "";
  } else {
    return brands[Math.floor(index / 2)];
  }
});

    const ctx = document.getElementById('topSellingCategoriesChart').getContext('2d');
  
    const topSellingCategoriesChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels:result,
            datasets: [{
                label: 'Selling Quantities',
                data: `<%= JSON.stringify(sellingQuantitiesByCategory) %>`,
                backgroundColor: 'rgba(75, 192, 192, 0.5)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
  });
</script>





      <!-- Add Bootstrap JS and Popper.js scripts at the end of the body -->
      <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
      <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

</body>

</html>